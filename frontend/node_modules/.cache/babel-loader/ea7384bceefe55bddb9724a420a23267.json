{"ast":null,"code":"var _jsxFileName = \"/Users/rawsht/Downloads/React-Django-To-Do-App-master/frontend/src/App.js\";\nimport React from 'react';\nimport CRUD from './src/components/CRUD';\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CRUD, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default App;\n/*\nfunction App(){\n\n  const init={\n      id:null,\n      title:\"\",\n  }\n\n  const [Data,setData]=useState([])\n  const [Item,setItem]=useState(init)\n  const [CheckForUpdate,setCheckForUpdate]=useState(false)\n  \n  useEffect(() => {\n      axios.get('http://127.0.0.1:8000/api/task-list/')\n      .then(\n          response=>{ \n            setData(response.data)     \n          }\n      )\n      .catch(() => {\n        console.log(\"error\")\n    })\n  }, [Data])\n\n\n  const handlechange=(e)=>{\n    setItem({...Item,\n          title:e.target.value,     \n          })  \n  }\n\n  const handleSubmit=()=>{\n    axios.post('http://127.0.0.1:8000/api/task-create/',Item)\n    setItem(Item)\n   \n  }\n  \n  const Edit=(Item)=>{\n          setCheckForUpdate(true)\n          setItem(Item)   \n  }\n\n  const handleEdit=()=>{\n    \n      axios.post(`http://127.0.0.1:8000/api/task-update/${Item.id}/`,\n      {\n          title:Item.title,     \n      });\n      setCheckForUpdate(false)\n      setItem(Item)\n  }\n  \nconst handleDelete=(Item)=>{\n    axios.delete(`http://127.0.0.1:8000/api/task-delete/${Item.id}/`)\n    .then((response) =>{\n        setItem(Item)\n    })\n  }\n\nreturn(\n\n    <div className=\"container\">\n    <div id=\"task-container\">\n    <div  id=\"form-wrapper\">\n    <form className=\"form\" onSubmit={e=>(CheckForUpdate)?handleEdit(e):handleSubmit(e) }>\n                  <div className=\"flex-wrapper\">\n                      <div style={{flex: 6}}>\n                      <input type=\"text\" className=\"form-control mr-1\" onChange={e=>handlechange(e)} value={Item.title} id=\"titleInput\" placeholder=\"add item \"/>\n                     </div>\n                      <div style={{flex: 1}}>          \n               <button id=\"submit\" className=\"btn btn-warning\" type=\"submit\" value=\"Add\">\n               <FontAwesomeIcon icon={faPaperPlane} /></button>\n            \n              </div>                \n                  </div>\n                  </form>    \n              </div>\n\n              <div  id=\"list-wrapper\"> \n              {Data.map((Item,index)=>( \n                  <div key={index} className=\"task-wrapper flex-wrapper\">\n                          \n                  <div style={{flex:7}}>\n                  {Item.title}\n                          </div>\n\n                          <div style={{flex:1}}>\n                              <button onClick={() => Edit(Item)}  className=\"btn buttonex buttone\"><FontAwesomeIcon icon={faEdit} /></button>\n                          </div>\n\n                          <div style={{flex:1}}>\n                              <button onClick={() => handleDelete(Item)} className=\"btn buttonex buttonr\"><FontAwesomeIcon icon={faTrash} /></button>\n                          </div>\n                        \n                          </div>\n                      ))}\n        </div>\n        </div>\n      </div>\n\n)\n}\nexport default App\n       \n*/\n\n/*\n\nconst axios = require('axios').default;\n\naxios.get('https://jsonplaceholder.typicode.com/posts')\n    .then(resp => {\n        console.log(resp.data);\n    })\n    .catch(err => {\n        // Handle Error Here\n        console.error(err);\n    });\nconst axios = require('axios');\n\nconst sendGetRequest = async () => {\n    try {\n        const resp = await axios.get('https://jsonplaceholder.typicode.com/posts');\n        console.log(resp.data);\n    } catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n};\n\nsendGetRequest();\n\nconst axios = require('axios').default;\n\nconst newPost = {\n    userId: 1,\n    title: 'A new post',\n    body: 'This is the body of the new post'\n};\n\nconst sendPostRequest = async () => {\n    try {\n        const resp = await axios.post('https://jsonplaceholder.typicode.com/posts', newPost);\n        console.log(resp.data);\n    } catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n};\n\nsendPostRequest();\n\nconst axios = require('axios').default;\n\nconst updatedPost = {\n    id: 1,\n    userId: 1,\n    title: 'A new title',\n    body: 'Update this post'\n};\n\nconst sendPutRequest = async () => {\n    try {\n        const resp = await axios.put('https://jsonplaceholder.typicode.com/posts/1', updatedPost);\n        console.log(resp.data);\n    } catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n};\n\nsendPutRequest();\n\nconst axios = require('axios').default;\n\nconst sendDeleteRequest = async () => {\n    try {\n        const resp = await axios.delete('https://jsonplaceholder.typicode.com/posts/1')\n        console.log(resp.data);\n    } catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n};\n\nsendDeleteRequest();\n\n onst axios = require('axios').default;\n\nconst sendRequest = async () => {\n    try {\n        const resp = await axios({\n            method: 'PUT',\n            url: 'https://jsonplaceholder.typicode.com/posts/1',\n            data: {\n                id: 1,\n                userId: 1,\n                title: 'A new title',\n                body: 'Update this post'\n            }\n        });\n\n        console.log(resp.data);\n    } catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n}\n\nsendRequest();\n\nhttps://stackabuse.com/making-asynchronous-http-requests-in-javascript-with-axios/\n*/","map":{"version":3,"sources":["/Users/rawsht/Downloads/React-Django-To-Do-App-master/frontend/src/App.js"],"names":["React","CRUD","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAEA,SAASC,GAAT,GAAc;AAEd,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ;AASC;;AACD,eAAeA,GAAfsourcesContent":["import React from 'react'\nimport CRUD from './src/components/CRUD'\n\nfunction App(){\n\nreturn(\n    \n    <div>\n\n        <CRUD/>  \n\n    </div>\n\n)\n}\nexport default App\n       \n \n/*\nfunction App(){\n\n  const init={\n      id:null,\n      title:\"\",\n  }\n\n  const [Data,setData]=useState([])\n  const [Item,setItem]=useState(init)\n  const [CheckForUpdate,setCheckForUpdate]=useState(false)\n  \n  useEffect(() => {\n      axios.get('http://127.0.0.1:8000/api/task-list/')\n      .then(\n          response=>{ \n            setData(response.data)     \n          }\n      )\n      .catch(() => {\n        console.log(\"error\")\n    })\n  }, [Data])\n\n\n  const handlechange=(e)=>{\n    setItem({...Item,\n          title:e.target.value,     \n          })  \n  }\n\n  const handleSubmit=()=>{\n    axios.post('http://127.0.0.1:8000/api/task-create/',Item)\n    setItem(Item)\n   \n  }\n  \n  const Edit=(Item)=>{\n          setCheckForUpdate(true)\n          setItem(Item)   \n  }\n\n  const handleEdit=()=>{\n    \n      axios.post(`http://127.0.0.1:8000/api/task-update/${Item.id}/`,\n      {\n          title:Item.title,     \n      });\n      setCheckForUpdate(false)\n      setItem(Item)\n  }\n  \nconst handleDelete=(Item)=>{\n    axios.delete(`http://127.0.0.1:8000/api/task-delete/${Item.id}/`)\n    .then((response) =>{\n        setItem(Item)\n    })\n  }\n\nreturn(\n\n    <div className=\"container\">\n    <div id=\"task-container\">\n    <div  id=\"form-wrapper\">\n    <form className=\"form\" onSubmit={e=>(CheckForUpdate)?handleEdit(e):handleSubmit(e) }>\n                  <div className=\"flex-wrapper\">\n                      <div style={{flex: 6}}>\n                      <input type=\"text\" className=\"form-control mr-1\" onChange={e=>handlechange(e)} value={Item.title} id=\"titleInput\" placeholder=\"add item \"/>\n                     </div>\n                      <div style={{flex: 1}}>          \n               <button id=\"submit\" className=\"btn btn-warning\" type=\"submit\" value=\"Add\">\n               <FontAwesomeIcon icon={faPaperPlane} /></button>\n            \n              </div>                \n                  </div>\n                  </form>    \n              </div>\n\n              <div  id=\"list-wrapper\"> \n              {Data.map((Item,index)=>( \n                  <div key={index} className=\"task-wrapper flex-wrapper\">\n                          \n                  <div style={{flex:7}}>\n                  {Item.title}\n                          </div>\n\n                          <div style={{flex:1}}>\n                              <button onClick={() => Edit(Item)}  className=\"btn buttonex buttone\"><FontAwesomeIcon icon={faEdit} /></button>\n                          </div>\n\n                          <div style={{flex:1}}>\n                              <button onClick={() => handleDelete(Item)} className=\"btn buttonex buttonr\"><FontAwesomeIcon icon={faTrash} /></button>\n                          </div>\n                        \n                          </div>\n                      ))}\n        </div>\n        </div>\n      </div>\n\n)\n}\nexport default App\n       \n*/\n/*\n\nconst axios = require('axios').default;\n\naxios.get('https://jsonplaceholder.typicode.com/posts')\n    .then(resp => {\n        console.log(resp.data);\n    })\n    .catch(err => {\n        // Handle Error Here\n        console.error(err);\n    });\nconst axios = require('axios');\n\nconst sendGetRequest = async () => {\n    try {\n        const resp = await axios.get('https://jsonplaceholder.typicode.com/posts');\n        console.log(resp.data);\n    } catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n};\n\nsendGetRequest();\n\nconst axios = require('axios').default;\n\nconst newPost = {\n    userId: 1,\n    title: 'A new post',\n    body: 'This is the body of the new post'\n};\n\nconst sendPostRequest = async () => {\n    try {\n        const resp = await axios.post('https://jsonplaceholder.typicode.com/posts', newPost);\n        console.log(resp.data);\n    } catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n};\n\nsendPostRequest();\n\nconst axios = require('axios').default;\n\nconst updatedPost = {\n    id: 1,\n    userId: 1,\n    title: 'A new title',\n    body: 'Update this post'\n};\n\nconst sendPutRequest = async () => {\n    try {\n        const resp = await axios.put('https://jsonplaceholder.typicode.com/posts/1', updatedPost);\n        console.log(resp.data);\n    } catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n};\n\nsendPutRequest();\n\nconst axios = require('axios').default;\n\nconst sendDeleteRequest = async () => {\n    try {\n        const resp = await axios.delete('https://jsonplaceholder.typicode.com/posts/1')\n        console.log(resp.data);\n    } catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n};\n\nsendDeleteRequest();\n\n onst axios = require('axios').default;\n\nconst sendRequest = async () => {\n    try {\n        const resp = await axios({\n            method: 'PUT',\n            url: 'https://jsonplaceholder.typicode.com/posts/1',\n            data: {\n                id: 1,\n                userId: 1,\n                title: 'A new title',\n                body: 'Update this post'\n            }\n        });\n\n        console.log(resp.data);\n    } catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n}\n\nsendRequest();\n\nhttps://stackabuse.com/making-asynchronous-http-requests-in-javascript-with-axios/\n*/"]},"metadata":{},"sourceType":"module"}